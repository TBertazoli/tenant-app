generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  APPLICANT
  TENANT
  PROPERTY_MANAGER
  LEASING_AGENT
}

model Address {
  id                Int                @id @default(autoincrement())
  number            Int
  street            String
  suiteNumber       Int
  city              String
  state             String
  zipCode           String
  country           String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime
  ManagementCompany ManagementCompany?
  Property          Property?
}

model ContactInfo {
  id          Int      @id @default(autoincrement())
  contactName String
  email       String
  phoneNumber String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id          Int      @id @default(autoincrement())
  firstName   String   @db.VarChar(40)
  lastName    String   @db.VarChar(40)
  email       String   @unique
  password    String
  dateOfBirth DateTime
  phoneNumber String   @db.VarChar(40)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ManagementCompany {
  id         Int       @id @default(autoincrement())
  name       String
  address    Address   @relation(fields: [addressId], references: [id])
  addressId  Int       @unique
  websiteURL String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Property   Property?
}

model Property {
  id                  Int                @id @default(autoincrement())
  managementCompany   ManagementCompany  @relation(fields: [managementCompanyId], references: [id])
  managementCompanyId Int                @unique
  address             Address            @relation(fields: [addressId], references: [id])
  addressId           Int                @unique
  propertyName        String
  websiteURL          String
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  PropertyToAmenity   PropertyToAmenity?
  Apartment           Apartment?
}

model Amenity {
  id                 Int                @id @default(autoincrement())
  amenityName        String
  description        String
  location           String
  availabilityStatus DateTime
  requiresAccessCode Boolean            @default(false)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  PropertyToAmenity  PropertyToAmenity?
}

model PropertyToAmenity {
  id         Int      @id @default(autoincrement())
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId Int      @unique
  amenity    Amenity  @relation(fields: [amenityId], references: [id])
  amenityId  Int      @unique
}

model Apartment {
  id          Int      @id @default(autoincrement())
  property    Property @relation(fields: [propertyId], references: [id])
  propertyId  Int      @unique
  unitNumber  Int
  maxCapacity Int
  squareFeet  Int
  image       String
  beddrooms   Int
  bathrooms   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
